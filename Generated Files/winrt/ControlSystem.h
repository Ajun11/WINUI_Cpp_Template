// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.240405.15

#pragma once
#ifndef WINRT_ControlSystem_H
#define WINRT_ControlSystem_H
#include "winrt/base.h"
static_assert(winrt::check_version(CPPWINRT_VERSION, "2.0.240405.15"), "Mismatched C++/WinRT headers.");
#define CPPWINRT_VERSION "2.0.240405.15"
#include "winrt/impl/Microsoft.UI.Composition.2.h"
#include "winrt/impl/Microsoft.UI.Xaml.2.h"
#include "winrt/impl/Microsoft.UI.Xaml.Controls.2.h"
#include "winrt/impl/Microsoft.UI.Xaml.Markup.2.h"
#include "winrt/impl/ControlSystem.2.h"
namespace winrt::impl
{
    template <typename D>
    struct produce<D, winrt::ControlSystem::IMainPage> : produce_base<D, winrt::ControlSystem::IMainPage>
    {
    };
    template <typename D>
    struct produce<D, winrt::ControlSystem::IMainWindow> : produce_base<D, winrt::ControlSystem::IMainWindow>
    {
    };
    template <typename D>
    struct produce<D, winrt::ControlSystem::IPage1> : produce_base<D, winrt::ControlSystem::IPage1>
    {
    };
    template <typename D>
    struct produce<D, winrt::ControlSystem::IPage2> : produce_base<D, winrt::ControlSystem::IPage2>
    {
    };
    template <typename D>
    struct produce<D, winrt::ControlSystem::IPage3> : produce_base<D, winrt::ControlSystem::IPage3>
    {
    };
    template <typename D>
    struct produce<D, winrt::ControlSystem::IPage4> : produce_base<D, winrt::ControlSystem::IPage4>
    {
    };
    template <typename D>
    struct produce<D, winrt::ControlSystem::IParameterSet> : produce_base<D, winrt::ControlSystem::IParameterSet>
    {
    };
    template <typename D>
    struct produce<D, winrt::ControlSystem::ISettingsPage> : produce_base<D, winrt::ControlSystem::ISettingsPage>
    {
    };
    template <typename D>
    struct produce<D, winrt::ControlSystem::ISimulationMultiThreading> : produce_base<D, winrt::ControlSystem::ISimulationMultiThreading>
    {
    };
}
WINRT_EXPORT namespace winrt::ControlSystem
{
}
namespace std
{
#ifndef WINRT_LEAN_AND_MEAN
    template<> struct hash<winrt::ControlSystem::IMainPage> : winrt::impl::hash_base {};
    template<> struct hash<winrt::ControlSystem::IMainWindow> : winrt::impl::hash_base {};
    template<> struct hash<winrt::ControlSystem::IPage1> : winrt::impl::hash_base {};
    template<> struct hash<winrt::ControlSystem::IPage2> : winrt::impl::hash_base {};
    template<> struct hash<winrt::ControlSystem::IPage3> : winrt::impl::hash_base {};
    template<> struct hash<winrt::ControlSystem::IPage4> : winrt::impl::hash_base {};
    template<> struct hash<winrt::ControlSystem::IParameterSet> : winrt::impl::hash_base {};
    template<> struct hash<winrt::ControlSystem::ISettingsPage> : winrt::impl::hash_base {};
    template<> struct hash<winrt::ControlSystem::ISimulationMultiThreading> : winrt::impl::hash_base {};
    template<> struct hash<winrt::ControlSystem::MainPage> : winrt::impl::hash_base {};
    template<> struct hash<winrt::ControlSystem::MainWindow> : winrt::impl::hash_base {};
    template<> struct hash<winrt::ControlSystem::Page1> : winrt::impl::hash_base {};
    template<> struct hash<winrt::ControlSystem::Page2> : winrt::impl::hash_base {};
    template<> struct hash<winrt::ControlSystem::Page3> : winrt::impl::hash_base {};
    template<> struct hash<winrt::ControlSystem::Page4> : winrt::impl::hash_base {};
    template<> struct hash<winrt::ControlSystem::ParameterSet> : winrt::impl::hash_base {};
    template<> struct hash<winrt::ControlSystem::SettingsPage> : winrt::impl::hash_base {};
    template<> struct hash<winrt::ControlSystem::SimulationMultiThreading> : winrt::impl::hash_base {};
    template<> struct hash<winrt::ControlSystem::XamlMetaDataProvider> : winrt::impl::hash_base {};
#endif
#ifdef __cpp_lib_format
#endif
}
#endif
